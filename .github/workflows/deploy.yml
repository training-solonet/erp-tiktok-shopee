name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job 1: Code Quality Checks
  code-quality:
    name: Code Quality & Formatting
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, json, bcmath
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress --optimize-autoloader

      - name: Copy .env.example to .env
        run: cp .env.example .env || echo "No .env.example found"

      - name: Generate application key
        run: php artisan key:generate

      - name: Run Laravel Pint (Code Style Check)
        run: ./vendor/bin/pint --test
        continue-on-error: false

  # Job 2: Deploy to VPS (only on push to main/master)
  deploy:
    name: Deploy to VPS
    needs: code-quality
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to VPS via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT || 22 }}
          script_stop: true
          script: |
            echo "üöÄ Starting deployment..."
            
            # Navigate to project directory
            cd ${{ secrets.PROJECT_PATH }}
            
            echo "üì¶ Pulling latest changes from Git..."
            git fetch origin
            git reset --hard origin/${{ github.ref_name }}
            
            echo "üì• Installing Composer dependencies..."
            composer install --no-dev --optimize-autoloader --no-interaction
            
            echo "üì• Installing Node dependencies..."
            npm ci --production || npm install --production
            
            echo "üî® Building assets..."
            npm run build
            
            echo "‚öôÔ∏è Running Laravel optimizations..."
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            
            echo "üóÑÔ∏è Running database migrations..."
            php artisan migrate --force
            
            echo "üßπ Clearing caches..."
            php artisan cache:clear
            php artisan optimize:clear
            
            echo "‚úÖ Deployment completed successfully!"

      - name: Deployment Status Notification
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "‚úÖ Deployment successful!"
          else
            echo "‚ùå Deployment failed!"
          fi
